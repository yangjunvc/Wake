package com.android.wako.pay;import java.util.Map;import android.text.TextUtils;import com.android.wako.util.StringUtil;public class PayResult {	private String resultStatus;	private String result;	private String memo;	public PayResult(Map<String, String> rawResult) {		if (rawResult == null) {			return;		}		for (String key : rawResult.keySet()) {			if (TextUtils.equals(key, "resultStatus")) {				resultStatus = rawResult.get(key);			} else if (TextUtils.equals(key, "result")) {				result = rawResult.get(key);			} else if (TextUtils.equals(key, "memo")) {				memo = rawResult.get(key);			}		}	}	@Override	public String toString() {		return "resultStatus={" + resultStatus + "};memo={" + memo				+ "};result={" + result + "}";	}	public static String getResultMessage(String resultStatus){		String message = "";		if(StringUtil.isEmpty(resultStatus)) return "";		switch (Integer.valueOf(resultStatus)){			case 9000:				message = "支付成功";				break;			case 6000:				message = "支付服务正在进行升级操作";				break;			case 6001:				message = "支付取消";				break;			case 6002:				message = "用户中途取消支付操作";				break;			case 7001:				message = "网页支付失败";				break;			case 4000:				message = "系统异常";				break;			case 4001:				message = "数据格式不正确";				break;			case 4003:				message = "该用户绑定的支付宝账户被冻结或不允许支付";				break;			case 4004:				message = "该用户已解除绑定";				break;			case 4005:				message = "绑定失败或没有绑定";				break;			case 4006:				message = "订单支付失败";				break;			case 4010:				message = "重新绑定账户";				break;			default:				break;		}		return message;	}	/**	 * @return the resultStatus	 */	public String getResultStatus() {		return resultStatus;	}	/**	 * @return the memo	 */	public String getMemo() {		return memo;	}	/**	 * @return the result	 */	public String getResult() {		return result;	}}